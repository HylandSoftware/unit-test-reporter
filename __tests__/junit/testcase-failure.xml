<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="172" failures="1" time="39.607">
  <testsuite name="libs\users\src\lib\dialog\component.spec.ts/Component" errors="0" failures="0" skipped="0" timestamp="2021-03-18T19:38:23" time="1.574" tests="1">
    <testcase classname="UnsavedChangesDialogComponent.should create" name="UnsavedChangesDialogComponent should create" time="0.076">
    </testcase>
  </testsuite>
  <testsuite name="libs\users\src\lib\users\form\component.spec.ts/component" errors="0" failures="1" skipped="0" timestamp="2021-03-18T19:38:18" time="25.595" tests="57">
    <testcase classname="component.should create" name="component should create" time="0.315">
    </testcase>
    <testcase classname="component.form invalid when empty" name="component form invalid when empty" time="0.219">
      <failure>Error: expect(received).toBeTruthy()

Received: false
    at C:\code\gitweb\libs\users\src\lib\users\user-form\component.spec.ts:224:44
    at ZoneDelegate.Object.&lt;anonymous&gt;.ZoneDelegate.invoke (C:\code\git\web\node_modules\zone.js\dist\zone.js:386:30)
    at ProxyZoneSpec.Object.&lt;anonymous&gt;.ProxyZoneSpec.onInvoke (C:\code\git\web\node_modules\zone.js\dist\proxy.js:117:43)
    at ZoneDelegate.Object.&lt;anonymous&gt;.ZoneDelegate.invoke (C:\code\git\web\node_modules\zone.js\dist\zone.js:385:36)
    at Zone.Object.&lt;anonymous&gt;.Zone.run (C:\code\git\web\node_modules\zone.js\dist\zone.js:143:47)
    at Object.wrappedFunc (C:\code\git\web\node_modules\jest-preset-angular\build\zone-patch\index.js:49:30)
    at Object.asyncJestTest (C:\code\git\web\node_modules\jest-jasmine2\build\jasmineAsyncInstall.js:106:37)
    at C:\code\git\web\node_modules\jest-jasmine2\build\queueRunner.js:45:12
    at new Promise (&lt;anonymous&gt;)
    at mapper (C:\code\git\web\node_modules\jest-jasmine2\build\queueRunner.js:28:19)
    at C:\code\git\web\node_modules\jest-jasmine2\build\queueRunner.js:75:41</failure>
    </testcase>
    <testcase classname="component.form is valid if all fields are valid" name="component form is valid if all fields are valid" time="0.15">
    </testcase>
    <testcase classname="component.form is valid even if firstname or lastname are empty" name="component form is valid even if firstname or lastname are empty" time="0.174">
    </testcase>
    <testcase classname="component.form is invalid if username is empty" name="component form is invalid if username is empty" time="0.174">
    </testcase>
    <testcase classname="component.form is invalid if email is empty" name="component form is invalid if email is empty" time="0.148">
    </testcase>
    <testcase classname="component.form field required error" name="component form field required error" time="0.16">
    </testcase>
    <testcase classname="component.email form field invalid email error" name="component email form field invalid email error" time="0.165">
    </testcase>
    <testcase classname="component.if form fields are valid must not return any error" name="component if form fields are valid must not return any error" time="0.23">
    </testcase>
    <testcase classname="component.verify form fields are set after component creation and userView is true when activated route contains id" name="component verify form fields are set after component creation and userView is true when activated route contains id" time="0.167">
    </testcase>
    <testcase classname="component.verify userView is false when activated route does not contain id" name="component verify userView is false when activated route does not contain id" time="0.178">
    </testcase>
    <testcase classname="component.success toast message when user is created" name="component success toast message when user is created" time="0.172">
    </testcase>
    <testcase classname="component.success toast message when user is edited" name="component success toast message when user is edited" time="0.21">
    </testcase>
    <testcase classname="component.click on cancel, navigate to parent route" name="component click on cancel, navigate to parent route" time="0.185">
    </testcase>
    <testcase classname="component.if userView, submitForm calls edit user mutate instead of add user mutate" name="component if userView, submitForm calls edit user mutate instead of add user mutate" time="0.166">
    </testcase>
    <testcase classname="component.if not userView, submitForm calls add user mutate instead of edit user mutate" name="component if not userView, submitForm calls add user mutate instead of edit user mutate" time="0.162">
    </testcase>
    <testcase classname="component.verify unsubscribe on destroy" name="component verify unsubscribe on destroy" time="0.166">
    </testcase>
    <testcase classname="component.verify given not user view, submitForm calls add user mutate with user input from form and refetch queries on UserAccounts query" name="component verify given not user view, submitForm calls add user mutate with user input from form and refetch queries on UserAccounts query" time="0.169">
    </testcase>
    <testcase classname="component.verify given user view, submitForm calls edit user mutate with edited user input from form and user information query is updated" name="component verify given user view, submitForm calls edit user mutate with edited user input from form and user information query is updated" time="0.191">
    </testcase>
    <testcase classname="component.verify given not user view, navigate on submitForm" name="component verify given not user view, navigate on submitForm" time="0.194">
    </testcase>
    <testcase classname="component.verify given user view, do not navigate on submitForm" name="component verify given user view, do not navigate on submitForm" time="0.184">
    </testcase>
    <testcase classname="component.verify given not user view, toast create user error on thrown error on submitForm" name="component verify given not user view, toast create user error on thrown error on submitForm" time="0.191">
    </testcase>
    <testcase classname="component.verify given user view, toast edit user error on thrown error on submitForm" name="component verify given user view, toast edit user error on thrown error on submitForm" time="0.23">
    </testcase>
    <testcase classname="component.verify given not user view, toast create user error on GraphQL user error on submitForm" name="component verify given not user view, toast create user error on GraphQL user error on submitForm" time="0.221">
    </testcase>
    <testcase classname="component.verify given not user view, toast warning with first user error for partial success on submitForm" name="component verify given not user view, toast warning with first user error for partial success on submitForm" time="0.27">
    </testcase>
    <testcase classname="component.verify given not user view, toast first user error on GraphQL userErrors on submitForm" name="component verify given not user view, toast first user error on GraphQL userErrors on submitForm" time="0.229">
    </testcase>
    <testcase classname="component.verify given user view, toast edit user error on GraphQL user error on submitForm" name="component verify given user view, toast edit user error on GraphQL user error on submitForm" time="0.296">
    </testcase>
    <testcase classname="component.verify given user view, toast first error message on GraphQL userError on submitForm" name="component verify given user view, toast first error message on GraphQL userError on submitForm" time="0.266">
    </testcase>
    <testcase classname="component.verify given user view, toast warning with first error message on partial success on submitForm" name="component verify given user view, toast warning with first error message on partial success on submitForm" time="0.281">
    </testcase>
    <testcase classname="component.verify toast success message on resendVerificationEmail with valid userId" name="component verify toast success message on resendVerificationEmail with valid userId" time="0.273">
    </testcase>
    <testcase classname="component.verify mutate called with userId on resendVerificationEmail when userId defined" name="component verify mutate called with userId on resendVerificationEmail when userId defined" time="0.334">
    </testcase>
    <testcase classname="component.verify mutate not called on resendVerificationEmail when userId undefined" name="component verify mutate not called on resendVerificationEmail when userId undefined" time="0.258">
    </testcase>
    <testcase classname="component.verify toast error on GraphQL user error on resendVerificationEmail" name="component verify toast error on GraphQL user error on resendVerificationEmail" time="0.249">
    </testcase>
    <testcase classname="component.verify toast error on thrown error on resendVerificationEmail" name="component verify toast error on thrown error on resendVerificationEmail" time="0.258">
    </testcase>
    <testcase classname="component.verify unlock user calls mutate with userId, updates locked state on UserInformationQuery, and will refetch the query for user accounts" name="component verify unlock user calls mutate with userId, updates locked state on UserInformationQuery, and will refetch the query for user accounts" time="0.278">
    </testcase>
    <testcase classname="component.verify toast success on unlocking a user" name="component verify toast success on unlocking a user" time="0.259">
    </testcase>
    <testcase classname="component.verify toast error on thrown error on unlockUser" name="component verify toast error on thrown error on unlockUser" time="0.281">
    </testcase>
    <testcase classname="component.verify toast error on graphQL user error on unlockUser" name="component verify toast error on graphQL user error on unlockUser" time="0.274">
    </testcase>
    <testcase classname="component.verify mutate not be called on userUnlock when userId is undefined" name="component verify mutate not be called on userUnlock when userId is undefined" time="0.285">
    </testcase>
    <testcase classname="component.verify resetPassword calls mutate with userId" name="component verify resetPassword calls mutate with userId" time="0.293">
    </testcase>
    <testcase classname="component.verify toast success on reset user password" name="component verify toast success on reset user password" time="0.307">
    </testcase>
    <testcase classname="component.verify toast error on thrown error on resetUserPassword" name="component verify toast error on thrown error on resetUserPassword" time="0.324">
    </testcase>
    <testcase classname="component.verify toast error on graphQL user error on resetUserPassword" name="component verify toast error on graphQL user error on resetUserPassword" time="0.344">
    </testcase>
    <testcase classname="component.verify mutate not be called on resetUserPassword when userId is undefined" name="component verify mutate not be called on resetUserPassword when userId is undefined" time="0.299">
    </testcase>
    <testcase classname="component.verify edited$ emits a boolean value that is true if the form has been edited, and is distinct from the previous value; and false otherwise." name="component verify edited$ emits a boolean value that is true if the form has been edited, and is distinct from the previous value; and false otherwise." time="0.326">
    </testcase>
    <testcase classname="component.verify edited$ emits true if any field in the form has been edited" name="component verify edited$ emits true if any field in the form has been edited" time="0.335">
    </testcase>
    <testcase classname="component.verify edited$ emits false after user create" name="component verify edited$ emits false after user create" time="0.331">
    </testcase>
    <testcase classname="component.verify if not userView, userInformation$ emits default value that matches empty form values." name="component verify if not userView, userInformation$ emits default value that matches empty form values." time="0.346">
    </testcase>
    <testcase classname="component.verify if userView, userInformation$ emits user information from UserInformationQuery" name="component verify if userView, userInformation$ emits user information from UserInformationQuery" time="0.334">
    </testcase>
    <testcase classname="component.verify calling addToUserGroups, opens dialog with input data" name="component verify calling addToUserGroups, opens dialog with input data" time="0.403">
    </testcase>
    <testcase classname="component.verify after dialog is closed, userGroupsForUser$ is updated" name="component verify after dialog is closed, userGroupsForUser$ is updated" time="0.424">
    </testcase>
    <testcase classname="component.verify calling remove, removes the user group" name="component verify calling remove, removes the user group" time="0.53">
    </testcase>
    <testcase classname="component.verify user groups are assigned from graphQL response" name="component verify user groups are assigned from graphQL response" time="0.418">
    </testcase>
    <testcase classname="component.verify userGroupsForUser$ gets the value from userInfoService" name="component verify userGroupsForUser$ gets the value from userInfoService" time="0.465">
    </testcase>
    <testcase classname="component.verify validators when service user is loaded" name="component verify validators when service user is loaded" time="0.36">
    </testcase>
    <testcase classname="component.verify validators when interactive user is loaded" name="component verify validators when interactive user is loaded" time="0.4">
    </testcase>
    <testcase classname="component.varify if form was disabled and enabled again" name="component varify if form was disabled and enabled again" time="0.435">
    </testcase>
  </testsuite>
</testsuites>