name: "build-test"
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: |
        npm install
        npm run all
        
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
          
    - uses: ./
      with: 
        path: 'test-results/nunit.xml'
        report-title: 'nunit'
        access-token: ${{secrets.GITHUB_TOKEN}}

    - uses: ./
      with: 
        path: 'test-results/not-executed.trx'
        reportType: 'trx'
        report-title: 'trx-not-executed'
        access-token: ${{secrets.GITHUB_TOKEN}}

  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic-release
      with:
        extra_plugins: |
          @semantic-release/exec
          @semantic-release/changelog
          @semantic-release/git
        branches: |
          [
            "+([0-9])?(.{+([0-9]),x}).x",
            "main",
            "next",
            "next-major",
            {
              "name": "beta",
              "prerelease": true
            },
            {
              "name": "alpha",
              "prerelease": true
            }
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Move major version tag
      if: steps.semantic-release.outputs.new_release_published == 'true'
      env:
        VERION_TAG: v${{steps.semantic-release.outputs.new_release_major_version}}
      run: |
        git tag -d ${{ env.VERION_TAG }}
        git push origin :${{ env.VERION_TAG }}
        git tag ${{ env.VERION_TAG }}
        git push origin ${{ env.VERION_TAG }}
